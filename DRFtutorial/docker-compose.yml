version: '3'

services:
  db:
    image: postgres
    container_name: db
    hostname: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data/db:/postgres_data/db
    environment:
      POSTGRES_DB: tutorials_database
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: python3 manage.py runserver 0:8000
    container_name: web
    #entrypoint: tail -f
    #command: /dev/null
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=tutorials_database
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - DB_HOST=postgres
    links:
      - 'db'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: single-node
    networks:
      - efk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    ports:
      - "5601:5601"
    networks:
      - efk
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.8.0
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./DRFtutorial:/usr/share/filebeat/logs
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - efk
    links:
      - kibana
      - elasticsearch
    depends_on:
      - elasticsearch

networks:
  efk:
    driver: bridge